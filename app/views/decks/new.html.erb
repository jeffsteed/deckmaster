<% provide(:title, "Decks") %>
<div class="row">
  <div class="col-xs-12 col-md-4 col-md-offset-4">
    <h1>Create New Deck</h1>
  </div>
  <div class="col-xs-12 col-md-2">
    <button type="button" class="btn btn-primary col-md-6" data-toggle="modal" data-target="#save" id="saveDeck">Save</button>
  </div>
</div>

<div class="row">
  <div class="col-md-12" id="cardDropZone">
    <h1 id="dragHere">Drag cards here</h1>
  </div>
</div>
<h2 id="expandView"><em>expand view</em> <span class="glyphicon glyphicon-zoom-in"></span></h2>

<!-- holder for the carousel -->
<div id="carousel-me">

</div>

<!-- Save modal -->
<div class="modal fade" id="save" tabindex="-1" role="dialog">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title">Save Deck</h4>
      </div>
      <div class="modal-body col-md-10 col-md-offset-1">
        <%= form_for(@deck) do |f| %>
          <%= f.hidden_field :deck, id: "deckArray" %>

          <%= f.text_field :name, class: "form-control", placeholder: "Name your deck" %>
      </div>
      <div class="modal-footer">
          <%= f.button "Cancel", class: "btn btn-default", "data-dismiss" => "modal", "type" => "button" %>
          <%= f.submit "Save Deck", class: "btn btn-primary col-md-4", id: "saveDeck" %>
        <% end %>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->


<script type="text/javascript">

  var getSet = function(page) {
    // console.log("getSet has been called");
    var response;

    var getResponse = function(data) {
      // console.log("getResponse has been called");
      response = data;
    }
    var xhr = new XMLHttpRequest();
    xhr.open("get", "https://api.deckbrew.com/mtg/cards?set=BFZ&page=" + page, false);
    xhr.onreadystatechange = function() {
      if (xhr.readyState != XMLHttpRequest.DONE) {
        return;
      }
      // console.log(xhr.status);
      if (xhr.status == 200) {
        var data = JSON.parse(xhr.responseText);
        getResponse(data);
      }
    };
    xhr.send(null);

    return response;
  };
  //
  // var createIndicators = function(response) {
  //   var indicators = document.getElementById('indicators');
  //   for (var i = 0; i < response.length; i+=5) {
  //     var li = document.createElement('li');
  //     li.setAttribute("data-target", "#card-carousel");
  //     li.setAttribute("data-slide-to", i);
  //     if (i == 0) {
  //       li.classList.add("active");
  //     }
  //     indicators.appendChild(li);
  //   }
  // };


  var createItems = function(pages) {
    // console.log("createItems has been called");
    var cardCarousel = document.createElement('div');
    cardCarousel.id = "card-carousel";
    cardCarousel.classList.add("carousel");
    cardCarousel.classList.add("slide");
    cardCarousel.setAttribute("data-ride", "carousel");
    var carouselWrapper = document.createElement('div');
    carouselWrapper.id = "carousel-wrapper";
    carouselWrapper.classList.add("carousel-inner");
    carouselWrapper.setAttribute("role", "listbox");

    var count = 0;
    for (var i = 0; i < pages; i++) {
      var pageCount = 0;
      var response = getSet(i);
      // console.log(response);

      for (var j = 0; j < response.length; j+=5) {
        var item = document.createElement('div');
        item.classList.add("item");
        if (count == 0) {
          item.classList.add("active");
        }
        var inc = 0;
        while (inc < 5 && pageCount < response.length) {
          var img = document.createElement('img');
          // console.log(count);
          var url = response[(pageCount).toString()]["editions"][0]["image_url"];
          img.src = url;
          img.alt = response[(pageCount).toString()]["name"];
          img.setAttribute("id", response[(pageCount).toString()]["id"]);
          img.style.display = "inline";
          img.classList.add("card");
          img.style.zIndex = 999;
          img.setAttribute("data-toggle", "modal");
          img.setAttribute("data-target", "#cardModal");
          item.appendChild(img);
          inc++;
          count++;
          pageCount++;
        }
        carouselWrapper.appendChild(item);
      }
    }
    cardCarousel.appendChild(carouselWrapper);

    var a1 = document.createElement('a');
    a1.classList.add("left");
    a1.classList.add("carousel-control");
    a1.href = "#card-carousel";
    a1.setAttribute("role", "button");
    a1.setAttribute("data-slide", "prev");
    var leftIcon = document.createElement('span');
    leftIcon.classList.add("glyphicon");
    leftIcon.classList.add("glyphicon-chevron-left");
    leftIcon.setAttribute("aria-hidden", "true");
    a1.appendChild(leftIcon);
    var sr = document.createElement('span');
    sr.classList.add("sr-only");
    sr.innerText = "Previous";
    a1.appendChild(sr);

    var a2 = document.createElement('a');
    a2.classList.add("right");
    a2.classList.add("carousel-control");
    a2.href = "#card-carousel";
    a2.setAttribute("role", "button");
    a2.setAttribute("data-slide", "next");
    var rightIcon = document.createElement('span');
    rightIcon.classList.add("glyphicon");
    rightIcon.classList.add("glyphicon-chevron-right");
    rightIcon.setAttribute("aria-hidden", "true");
    a2.appendChild(rightIcon);
    var sr2 = document.createElement('span');
    sr2.classList.add("sr-only");
    sr2.innerText = "Next";
    a2.appendChild(sr2);

    cardCarousel.appendChild(a1);
    cardCarousel.appendChild(a2);
    document.getElementById('carousel-me').appendChild(cardCarousel);
  };

///////////////////////////////////////////////////////////////////////
///////////////////   Expand and Collapse    //////////////////////////
///////////////////////////////////////////////////////////////////////

  function expandIt() {
    var view = document.getElementById('cardDropZone');
    view.style.height = "100%";
    expand.innerHTML = "collapse <span class='glyphicon glyphicon-zoom-out'></span>";
    expanded = true;
  }

  function collapseIt() {
    var view = document.getElementById('cardDropZone');
    view.style.height = "340px";
    expand.innerHTML = "expand view <span class='glyphicon glyphicon-zoom-in'></span>";
    document.getElementById('cardDropZone').scrollTop = 0;
    window.scroll(0,0);
    expanded = false;
  }

  var expand = document.getElementById('expandView');
  var expanded = false;
  expand.addEventListener("click", function() {
    if (expanded) {
      collapseIt();
    } else {
      expandIt();
    }
  });

  ///////////////////////////////////////////////////////////////////////
  ///////////////////       Deck Saving        //////////////////////////
  ///////////////////////////////////////////////////////////////////////

  document.getElementById('saveDeck').addEventListener("click", getDeck);

  function getDeck() {
    var deckArray = [];
    var dropZone = document.getElementById('cardDropZone');
    var deckCards = dropZone.children;
    for (var i = 0; i < deckCards.length; i++) {
      deckArray.push(deckCards[i]["id"]);
    }
    document.getElementById('deckArray').value = deckArray;
  }

  ///////////////////////////////////////////////////////////////////////
  ///////////////////     Element Positioning        ////////////////////
  ///////////////////////////////////////////////////////////////////////

  function getPosition(parentElement) {
    var x = 0, y = 0;
    while (parentElement) {
      x += (parentElement.offsetLeft - parentElement.scrollLeft + parentElement.clientLeft);
      y += (parentElement.offsetTop - parentElement.scrollTop + parentElement.clientTop);
      parentElement = parentElement.offsetParent;
    }
    return { x: x, y: y };
  }


  $(document).ready(function() {

    createItems(3);

    $(".card").draggable({
      cursor: "move",
      grid: [10, 10],
      helper: "clone",
      containment: "window",
      zIndex: 100
    });

    $("#cardDropZone").droppable({
      accept: ".card",
      drop: function(event, ui) {
        var droppedItem = $(ui.draggable).clone();
        var div = document.createElement('div');
        // console.log(div);
        // console.log(droppedItem[0].src);
        $(div).css("background-image", "url('" + droppedItem[0].src + "')");
        $(div).css("width", "112px");
        $(div).css("height", "156px");
        div.classList.add("mini");
        div.id = droppedItem[0].id;
        var close = document.createElement('span');
        close.classList.add("glyphicon");
        close.classList.add("glyphicon-remove");
        close.style.float = "right";
        div.appendChild(close);
        close.addEventListener("click", function() {
          $(div).remove();
        });
        var drags = document.getElementById('dragHere');
        if (drags) {
          drags.remove();
        }
        $(this).append(div);
      }
    });

    var cards = document.getElementsByClassName("card");
    // console.log(cards);
    for (var i = 0; i < cards.length; i++) {
      cards[i].addEventListener("click", function() {
        var position = getPosition(this);
        console.log(position["x"] + ", " + position["y"]);
      });
    }
  });
</script>
